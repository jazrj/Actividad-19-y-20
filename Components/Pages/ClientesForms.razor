@page "/clientes/nuevo"
@page "/clientes/editar/{Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioClientes _repositorio;

<h3>@_mensaje Clientes</h3>

<div style="background-color: #fce4ec; border: 2px solid #f48fb1; border-radius: 10px; padding: 20px; max-width: 600px; margin: 0 auto; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">
    <h3 style="text-align: center; color: #ad1457; margin-bottom: 20px;">Editar Cliente</h3>
    <EditForm Model="_cliente" FormName="frmCliente" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />

        <div class="row mb-3">
            <label for="txtNombre" class="col-2 col-form-label" style="color: #880e4f;">Nombre</label>
            <div class="col-10">
                <InputText id="txtNombre" class="form-control" style="border: 1px solid #f48fb1;" @bind-Value="_cliente.Nombre" />
                <ValidationMessage For="()=>_cliente.Nombre" style="color: #d32f2f;" />
            </div>
        </div>

        <div class="row mb-3">
            <label for="txtApellido" class="col-2 col-form-label" style="color: #880e4f;">Apellido</label>
            <div class="col-10">
                <InputText id="txtApellido" class="form-control" style="border: 1px solid #f48fb1;" @bind-Value="_cliente.Apellido" />
                <ValidationMessage For="()=>_cliente.Apellido" style="color: #d32f2f;" />
            </div>
        </div>

        <div class="row mb-3">
            <label for="txtDireccion" class="col-2 col-form-label" style="color: #880e4f;">Dirección</label>
            <div class="col-10">
                <InputText id="txtDireccion" class="form-control" style="border: 1px solid #f48fb1;" @bind-Value="_cliente.Direccion" />
                <ValidationMessage For="()=>_cliente.Direccion" style="color: #d32f2f;" />
            </div>
        </div>

        <div class="row mb-3">
            <label for="txtTelefono" class="col-2 col-form-label" style="color: #880e4f;">Teléfono</label>
            <div class="col-10">
                <InputText id="txtTelefono" class="form-control" style="border: 1px solid #f48fb1;" @bind-Value="_cliente.Telefono" />
                <ValidationMessage For="()=>_cliente.Telefono" style="color: #d32f2f;" />
            </div>
        </div>

        <div class="row mb-3">
            <label for="txtCorreo" class="col-2 col-form-label" style="color: #880e4f;">Correo</label>
            <div class="col-10">
                <InputText id="txtCorreo" class="form-control" style="border: 1px solid #f48fb1;" @bind-Value="_cliente.Correo" />
                <ValidationMessage For="()=>_cliente.Correo" style="color: #d32f2f;" />
            </div>
        </div>

        <div style="text-align: center;">
            <button type="submit" class="btn" style="background-color: #f06292; color: white; border-radius: 5px;" @onclick="Guardar">Guardar</button>
            <button class="btn ms-3" style="background-color: #d32f2f; color: white; border-radius: 5px;" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
        </div>
    </EditForm>
</div>


@code {
    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private Cliente? _cliente = new();

    protected override async Task OnInitializedAsync()
    {
        if(Id > 0)
        {
            _cliente = await _repositorio.Get(Id);
            _mensaje = "Modificar";
        }
        else
        {
            _mensaje = "Nuevo";
        }
    }
    private async void Guardar()
    {
        if(Id > 0)
        {
            await _repositorio.Update(Id, _cliente!);
        }
        else
        {
            await _repositorio.Add(_cliente!);
        }
        Cancelar();
    }
    private void Cancelar()
    {
        _navigator.NavigateTo("/Clientes");
    }

}
